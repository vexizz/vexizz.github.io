:root {
  --primary-bg-color: #f4f4f4;
  --text-color: #333;
  --main-bg-color: #333;
  --main-text-color: #ffffff;
  --main-btn-bg-color: #ffeded;
}

body,
h1,
p,
ul {
  margin: 0;
  padding: 0;
}

body {
  font-family: "REM", sans-serif;
  margin: 0 auto;
  background-color: var(--primary-bg-color);
  color: var(--text-color);
  line-height: 1.6;
  display: flex;
  flex-direction: column;
  align-items: center;
}

/* Add additional styles as needed */

/* Create a container for the main content */
.container {
  justify-content: flex-start;
  display: flex; /* for a desktop format, i think a flex display would be more appropriate and helps interactions much more easier due to being able to fit in a lot more. */
  max-width: 1000px;
  width: 100vw; /* the main point of this is a media (music video) player, so the video should be the largest, and the biggest focal point here. */
  max-width: 100%; /* never exceeds container. */
  height: auto;
  gap: 20px;
  align-items: flex-start;
  padding: 10px;
}

/* Header styling */
header {
  background-color: var(--main-bg-color);
  color: var(--main-text-color);
  padding: 13px 0;
  text-align: center;
  width: 100%;
}

/* Navigation styling */
nav {
  margin-top: 7px;
  text-align: center;
  padding: 5px 0;
}

nav ul {
  list-style: none;
  display: flex;
  justify-content: center;
  gap: 10px;
}

nav ul li {
  margin-right: 20px;
}

nav ul li a {
  text-decoration: underline;
  text-decoration-thickness: 1px; /* Thinner underline to not make it feel too heavy */
  text-underline-offset: 3px;     /* Adds a little spacing from the text so it doesn't seem unnatural and claustrophobic. */
}

/* Getting rid of the colour!! I think the layout/colour scheme of the player shouldn't be too colourful nor bright to keep the main focus on the video!! The golden rule of three colours in a colour palette always works best.*/
nav a {
  text-decoration: none;
  color: var(--text-color);
}

/* Highlight on hover to make it seem more clickable and interactable! */
a:hover {
  background-color: rgba(102, 102, 102, 0.25);
}

/* Media player styling */
.media-player {
  flex: 2;
  width: fixed;
  margin: 0 auto;
}

.media-player video {
  width: auto;
  height: auto;
  padding: 1px;
  border-radius: 10px; /* Rounding the borders to make it seem more soft and aesthetic. */
}

.custom-controls {
  display: flex;
  justify-content: space-between;
  align-items: center;
  gap: 0.5rem; /* Spacing between the control buttons to make it seem more neat and breathable. */
  margin-top: 10px; /* Spacing between the control buttons and the video for more neat arrangement and breathability! */
  width: 100%;
}

.custom-controls button {
  background-color: floralwhite;
  border: 1.6px solid #575757;
  border-radius: 6px;     /* Rounding the corners to make it look more softer and aesthetic. */
  padding: 0.5em 1em;
  cursor: pointer; /* To make it more interactable! */
  font-size: 0.6rem; /* I used rem here to try and make the text the same size as the icons throughout every desktop/websize. */
  display: flex;
  white-space: nowrap;
  align-items: center;
  border-radius: 10px;
  gap: 0.1em;
  min-height: 3em;
  background-color: var(--main-btn-bg-color); /* Cute colour to add some personality to the website, full explanation is tied alongside with the choice of colour for the links later on. */
}

.custom-controls button img {
  min-width: 1.5em;      /* scales with button text */
  height: auto;
}

.progress-bar {
  width: 100%;
  height: 15px;
  background-color: #ddd;
  cursor: pointer; /* The cursor turning into a pointer is to help show the user that they can interact with the progress bar, and that they can drag it to skip to different parts of the video, which will be useful especially to those who want to get to the good part of the music video, or want to go to a certain part.*/
  position: relative;
  border-radius: 7px;
  margin-top: 3px;
  position: relative;
}

.progress-bar span {
  display: block;
  height: 100%;
  border-radius: 7px;
  background-color: var(--main-bg-color);
  width: 0;
  transition: width 0.3s ease;
  position: relative;
}

.progress-bar span::after {
  content: '';
  position: absolute;
  top: 50%;
  left: 100%;           /* At the end of the fill. */
  transform: translate(-50%, -50%);
  width: 15px;
  height: 15px;
  background-color: white;
  border: 2px solid var(--main-bg-color); 
  border-radius: 50%;
  pointer-events: none;  /* So dragging/clicking still works. */
  box-shadow: 0 0 2px rgba(0,0,0,0.5);
}

/* Changing the text colour of my buttons to black so that they will match the icons. */
#step1-button {
  color: black;
}

#step2-button {
  color: black;
}


/* Footer styling */
footer {
  background-color: var(--main-bg-color);
  color: var(--main-text-color);
  text-align: center;
  padding: 10px 0;
  width: 100%;
}

/* Comment section styling */
.comment-section {
  border-radius: 12px; /* Rounding edges to suit the aesthetic. */
  display: flex;
  flex: 1; /* smaller than video */
  border: 2px solid #ccc;
  padding: 10px;
  margin-top: 20px;
  width:fixed;
  height: 200px;
  display: flex;
  flex-direction: column;
  background-color: #ffffff;
  overflow: hidden; /* Hiding the overflow so that later on, I can add in overflow-y which is the scrolling feature; I did this so that the comment section wouldn't take up a lot of the space and end up in the website being endlessly vertically long if there are a lot of comments. */
  max-height: 200px;
  overflow-y: auto; /* Allows vertical scrolling when there are too many comments, allowing a neater design for the site while still allowing lots of freedom.*/
}

.comment-section h3 {
  border-bottom: 2px solid var(--main-bg-color); /* An underline underneath the heading so that it effectively declares that THIS is the comment section. */
  padding-bottom: 5px; /* Space between text and underline */
}

#comments {
  flex: 1;
  overflow-y: auto; /* The scrollbar*/
  border-bottom: 1px solid #ccc;
  margin-bottom: 10px;
  padding-right: 5px; /* Small padding for scrollbar */
}

.new-comment {
  display: flex;
  gap: 0; /* Removes the gap between input and button, so that I can round their edges without leaving a missing hole. */
}

.new-comment input {
  flex: 1;
  padding: 5px;
  border-right: none; /* Removes the right border so it connects to the button. */
  border-radius: 8px 0 0 8px; /* Rounds only top-left and bottom-left corners. */   
}

.new-comment button {
  padding: 5px 10px;
  background-color: var(--main-btn-bg-color); /* Colour of the post button. */
  color:#161616;
  border-left: none; /* Removes the left border so it connects to the input. */
  border-radius: 0 8px 8px 0; /* Rounds only top-right and bottom-right corners. */
  cursor: pointer;
}

#comment-input {
  border: 1px solid #ccc;
  border-right: none;   /* Removes border on the right. */
  border-radius: 8px 0 0 8px; /* Curves only left side. */
  padding-left: 15px;
  background-color: #f9f9f9;
}

.new-comment button {
  border: 1px solid #ccc;
  border-left: 1px solid #999; /* Thicker border between box and button. */
  border-radius: 0 8px 8px 0; /* Curves only right side. */
  background-color: whitesmoke;
  padding: 5px 12px;
}

.comment {
  padding: 5px 8px;
  border-bottom: 1px solid #eee;
}

.username {
  font-weight: bold;
  font-size: 0.9rem;
  margin-bottom: 2px;
}

.comment-text {
  font-size: 0.85rem;
}

.recommendations {
  display: flex;
  flex-direction: column;
  flex: 1;                 /* Smaller than video-comments and video volumns, since THOSE are the bigger focus and thus, the other columns should be smaller. */
  border: 1px solid #ccc;
  padding: 10px;
  background-color: #fff;
}

.right-column {
  display: flex;
  border-radius: 12px;
  flex-direction: column; /* Stacks the children vertically. */
  gap: 10px;
  flex: 1; /* Same width as previous column. */
  border: 1px solid #ccc;
  padding: 10px;
  background-color: #fff;
  min-width: 30vh;
  max-height: 96.2vh;      /* Sets the maximum height. */
  overflow-y: auto;       /* Enables vertical scroll if content is taller, so that the content isn't messy and viewers can multitask without feeling too overwhelmed. */
}

.recommendations h3 {
  margin-bottom: 8px; /* Space below the heading. */
}

.recommendations ul {
  list-style: none;   /* Removes bullets. */
  padding: 0;         /* Removes default padding. */
  margin: 0;          /* Removes default margin. */
}

.recommendations ul li {
  margin-bottom: 8px; /* Space between each video. */
}

button:hover {
  scale: 0.9;
  background-color: rgba(255, 0, 51, 0.25);
}

/* Mobile/Smaller Screen Styling */
@media (max-width: 768px) {
  .custom-controls {
    gap: 0.1rem; /* Even smaller gap on phones */
  }
}

@media (max-width: 768px) {
  .recommendations {
    flex: 0 0 150px;  /* Shrink width to 150px since the original size was too large. */
    max-width: 150px; /* To ensure it doesnâ€™t grow larger and stays constant. */
    padding: 8px;
    font-size: 14px;  /* Also make the text smaller. */
  }
}

@media (max-width: 768px) {
  .progress-bar span::after {
    width: 15px; /*So that the progress bar can scale properly, be dragged properly, and not overflow on smaller screens since it was originally very long. */
    height: 15px;
    border: 1.5px solid var(--main-bg-color);
  }
}

/* Make everything vertical on small screens, so that everything is easily accessible and just scrollable. If it's in horizontal columns like on desktop, the control buttons would be too small to click, unreadable and thus not ncie to use.*/
@media (max-width: 768px) { 
  main.container {
    flex-direction: column; /* Stack all sections vertically. */
    align-items: stretch;   /* Make sections full width so that nothing is too compressed. */
  }

}

  /* Also make media player, comments, recommendations full width so that they are more accessible and comfortable on the eyes of phone users. */
  .media-player,
  .comment-section,
  .recommendations,
  .new-section {
    width: 100%;
    margin: 1; /* remove horizontal centering */
  }

@media (max-width: 768px) {
  .recommendations {
    flex: none;      
    width: 100%;     /* Make it full width. */
    max-width: none; /* In order to that, we must first remove any previous max-width. */
  }
}

@media (max-width: 768px) {
  nav {
    margin-top: 5px; /* Smaller margin for mobile to be careful the contents don't overflow or look too messy. */
  }

  nav ul li {
    margin-right: 10px; /* Tighten spacing between links. */
  }

}

@media (max-width:768px) {
  .right-column {
  display: flex;
  flex-direction: column; /* Stack children vertically on smaller screens. */
  gap: 10px;
  flex: 1; /* Same width as previous recommendations columns so it would feel consistent and more pleasing to the eye. */
  border: 1px solid #ccc;
  padding: 10px;
  background-color: #fff;
  max-height: 200px;      /* Sets the maximum height. */
  overflow-y: auto;       /* Enables vertical scroll if content is taller, keeping everything organized and also giving viewers the freedom to choose whether they want to read the lyrics, comment, or browse. */
}

}

.right-column h3 {
  display: flex;
  align-items: center;
  gap: 8px; /* Spacing between icon and text. */
  font-size: 18px;
}

.right-column h3 img {
  width: 20px;
  height: 20px;
}

.lyrics {
  margin-top: 10px;   /* Spacing from previous sections. */
  padding: 10px;
  border: 1px solid #ccc; /* For visual separations and neater arrangement. */
  background-color: #fff; 
}

.lyrics h2 {
  font-size: 1.5rem;
  margin-bottom: 8px;
}

.video-feed {
  display: flex;
  flex-direction: column;
  gap: 15px;
  width: 260px;
  max-width: 400px;
  margin: 0px auto;
  max-height: 96.2vh;
  overflow-y: auto;
  box-sizing: border-box;

/* Add padding inside the scrollable area. It's also pretty small in order to help viewers keep their focus on the main video instead, since THAT is the biggest focal point and where their attention should be. */
  padding-top: 0;      /* No padding at top, so heading stays put. */
  padding-left: 0px;  /* Space from left edge. */
  padding-right: 15px; /* Space from right edge. */
  padding-bottom: 10px; 
  box-sizing: border-box; 

}

.video-feed h2 {
  font-size: 1.5rem;
  margin-bottom: 1px;
}

.video-item {
  display: flex;
  padding: 5px;
  flex-direction: column;
  border: 1px solid #ccc;
  border-radius: 8px;
  background-color: #f9f9f9;
}

.thumbnail {
  position: relative;
  background-color: #ddd;
  width: 100%;
  padding-top: 56.25%; /* The usual 16:9 ratio that most viewers are familiar with and music videos are shot in. */
  cursor: pointer;
}

.play-btn {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  font-size: 2rem;
  color: white;
  text-shadow: 0 0 5px rgba(0,0,0,0.7);
  pointer-events: none;
}

.video-title {
  padding: 8px;
  font-weight: bold;
}

/* Mobile responsiveness for the video feed. */
@media (max-width: 768px) {
  .video-feed {
    max-width: 100%;            /* Overrides the previous max-width so we can stretch it to the full container width since it'll be scrolled vertically instead of being just another small section.*/
    width: 100%;                
    padding: 0 5px 5px 5px;     /* Small side padding for mobile, so it doesn't feel too claustrophobic. */
    gap: 10px;                   /* Slightly smaller gap between videos. */
    box-sizing: border-box;      /* Includes padding in width */
    overflow-y: visible;
}

  .video-feed h2 {
    font-size: 1.3rem;           /* Slightly smaller heading to match with the tiny scale of phones. */
    padding-left: 5px;           /* Align heading with videos according to the smaller screen size. */
    margin-bottom: 6px;
  }

  .video-item {
    border-radius: 6px;          /* Slightly smaller corners. */
  }

  .thumbnail {
    padding-top: 56.25%;         /* Keeps 16:9 aspect ratio */
  }

  .play-btn {
    font-size: 1.5rem;           /* Smaller play button for mobile since viewers will be using their finger. */
  }

  .video-title {
    padding: 6px;                /* Slightly smaller padding inside video box. */
    font-size: 0.9rem;           /* Smaller title text. */
  }
}

/* Mobile: fixed footer at bottom */
@media (max-width: 768px) {
  footer {
    position: fixed;
    bottom: 0;
    left: 0;
    width: 100%;
    z-index: 100px; /* Ensures it's on top of content */
  }
}

.video-feed {
  display: flex;
  flex-direction: column;
  gap: 15px;
  max-width: 600px;
  margin: 0 auto;
}

.video-feed h2 {
  font-size: 1.5rem;
  margin-bottom: 10px;
  border-bottom: 2px solid #ccc;
  padding-bottom: 5px;
}

.video-item {
  display: flex;
  flex-direction: column;
  gap: 2px;
  border: 1px solid #ccc;
  border-radius: 8px;
  background-color: #f9f9f9;
  padding: 8px;
}

.thumbnail {
  position: relative;
  width: 100%;
  padding-top: 56.25%; /* 16:9 aspect ratio */
  background-color: #ddd;
  border-radius: 6px;
  overflow: hidden;
}

.play-btn {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  font-size: 2rem;
  color: white;
  text-shadow: 0 0 5px rgba(0,0,0,0.7);
  pointer-events: none;
}

.duration {
  position: absolute;
  bottom: 5px;
  right: 5px;
  background-color: rgba(0,0,0,0.7);
  color: #fff;
  font-size: 0.75rem;
  padding: 2px 4px;
  border-radius: 2px;
}

.video-title {
  margin: 0;
  font-weight: bold;
  font-size: 1rem;
  margin: 0;
}

.video-info {
  margin: 0;
  font-size: 0.8rem;
  color: #555;
  padding-left: 8px;
}

.channel-name {
  font-weight: bold;
}

/* Responsive for mobile */
@media (max-width: 768px) {
  .video-feed {
    max-width: 100%;
    padding: 0 10px;
    margin-bottom: 60rem;
  }

  .video-title {
    font-size: 0.9rem;
  }

  .video-info {
    font-size: 0.75rem;
  }
}

.video-info .channel-name,
.video-info .meta {
  display: block;      /* Forces each piece of info onto its own line. */
  font-size: 0.9rem;   /* Slightly smaller than title. */
  color: #555;         /* Subtle text color. */
  margin: 2px 0;       /* Small spacing between lines. */
}

.new-section h3 {
  display: flex;
  align-items: center;  /* Vertically centered icon and name to look neat and professional. */
  gap: 8px;             /* Space between icon and name. */
  border-bottom: 2px solid #333; /* Line under heading. */
  padding-bottom: 4px;  /* Space between text and line. */
}

.new-section p {
    padding-top: 8px;
}

.description h3 {
  display: flex;
  align-items: center;  /* Vertically center icon and name. */
  gap: 8px;             /* Creates space between icon and name so it wouldn't feel claustrophobic. */
  margin-bottom: 10px;
  border-bottom: 2px solid #ccc;
  padding-bottom: 5px;
}

.description p {
    padding-top: 8px;
}

.lyrics h3 {
  display: flex;
  align-items: center;  
  gap: 8px;             
  
}

.new-section p {
    padding-top: 8px;
}

.media-player {
  position: relative; /* Needed for overlay positioning. */
}

.video-time-overlay {
  position: absolute;
  top: 8px;          /* Distance from the top of video so it would look natural and blend seamlessly.*/
  left: 8px;         /* Distance from left of video. */
  background-color: rgba(0, 0, 0, 0.6); /* Semi-transparent background to not make it stand out too much and natural, something the viewers won't actively notice, but will definitely appreciate it when they do. */
  color: white;
  padding: 2px 6px;
  font-size: 0.85rem;
  border-radius: 4px;
  z-index: 10;       /* Ensures it's on top of the video. */
  pointer-events: none; /* So clicks pass through and would work. */
}

.recommendations a {
  color: #9f2424;       /* Text color, red to match with the slightly pinkish tone of the control buttons that contrast well with the dark icons, helping signal that they are interactable and important. I chose this red and pink as well to match the heart and would go well with most videos and their colour palettes, especially music videos, since they tend to use bright colours like red and green. */
  text-decoration: none; /* Removes underline */
}

.recommendations a:hover {
  text-decoration: underline; /* Underline on hover to make it seem more interactable and signalling that it is a link. */
}

/* Making the scrollbar thinner so that it looks more seamless and would pin more attention into the content of the site instead. */
* {
  scrollbar-width: thin;            /* "auto" or "thin" */
  scrollbar-color: #888 #f1f1f1;    /* thumb color | track color */
}

#comment-input {
  color: black;  /* makes typed text black */
}